name: Release to Homebrew

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  homebrew-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Extract version from tag or input
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "CLEAN_VERSION=${VERSION#v}" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
          
      - name: Download release assets
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          echo "Downloading assets for version: $VERSION"
          
          # Create download directory
          mkdir -p downloads
          
          # Download tar.gz file (assuming it follows the pattern from build-and-package.yml)
          # We'll look for files that match common patterns
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/$VERSION"
          
          # Get release info
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               "$RELEASE_URL" \
               -o release_info.json
          
          # Extract download URLs for tar.gz files
          jq -r '.assets[] | select(.name | endswith(".tar.gz")) | .browser_download_url' release_info.json > download_urls.txt
          
          # Download the first tar.gz file found
          if [ -s download_urls.txt ]; then
            DOWNLOAD_URL=$(head -n1 download_urls.txt)
            FILENAME=$(basename "$DOWNLOAD_URL")
            echo "Downloading: $DOWNLOAD_URL"
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -L "$DOWNLOAD_URL" \
                 -o "downloads/$FILENAME"
            echo "ARCHIVE_FILE=downloads/$FILENAME" >> $GITHUB_ENV
            echo "ARCHIVE_NAME=$FILENAME" >> $GITHUB_ENV
          else
            echo "No tar.gz files found in release assets"
            exit 1
          fi
          
      - name: Calculate SHA256 checksum
        id: checksum
        run: |
          CHECKSUM=$(sha256sum "$ARCHIVE_FILE" | cut -d' ' -f1)
          echo "SHA256=$CHECKSUM" >> $GITHUB_OUTPUT
          echo "Archive: $ARCHIVE_FILE"
          echo "SHA256: $CHECKSUM"
          
      - name: Generate Homebrew formula
        run: |
          VERSION="${{ steps.get_version.outputs.CLEAN_VERSION }}"
          SHA256="${{ steps.checksum.outputs.SHA256 }}"
          ARCHIVE_NAME="${{ env.ARCHIVE_NAME }}"
          
          # Create formula directory
          mkdir -p formula
          
          cat > formula/kaitu.rb << EOF
          class Kaitu < Formula
            desc "Kaitu - A powerful application tool"
            homepage "https://github.com/${{ github.repository }}"
            url "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/${ARCHIVE_NAME}"
            sha256 "${SHA256}"
            version "${VERSION}"
          
            def install
              # Extract the archive
              system "tar", "-xzf", cached_download
              
              # Install binaries and files
              # Adjust these paths based on your application structure
              if File.exist?("kaitu")
                bin.install "kaitu"
              end
              
              # Install other files if present
              if Dir.exist?("lib")
                lib.install Dir["lib/*"]
              end
              
              if Dir.exist?("share")
                share.install Dir["share/*"]
              end
            end
          
            test do
              # Basic test to ensure the binary exists and runs
              system "#{bin}/kaitu", "--version" if File.exist?("#{bin}/kaitu")
            end
          end
          EOF
          
          echo "Generated Homebrew formula:"
          cat formula/kaitu.rb
          
      - name: Setup Git for Homebrew tap
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
      - name: Update Homebrew tap
        env:
          HOMEBREW_TAP_TOKEN: ${{ secrets.GH_PAT_TOKEN }}
          HOMEBREW_TAP_REPO: ${{ secrets.HOMEBREW_TAP_REPO }}
        run: |
          VERSION="${{ steps.get_version.outputs.CLEAN_VERSION }}"
          
          if [ -z "$HOMEBREW_TAP_TOKEN" ] || [ -z "$HOMEBREW_TAP_REPO" ]; then
            echo "Warning: HOMEBREW_TAP_TOKEN or HOMEBREW_TAP_REPO not set"
            echo "Please configure these secrets to enable Homebrew tap updates"
            echo "Generated formula is available in the artifacts"
            exit 0
          fi
          
          # Clone the Homebrew tap repository
          git clone https://${HOMEBREW_TAP_TOKEN}@github.com/${HOMEBREW_TAP_REPO}.git homebrew-tap
          cd homebrew-tap
          
          # Create Formula directory if it doesn't exist
          mkdir -p Formula
          
          # Copy the generated formula
          cp ../formula/kaitu.rb Formula/kaitu.rb
          
          # Commit and push changes
          git add Formula/kaitu.rb
          git commit -m "Update kaitu to version ${VERSION}"
          git tag "kaitu-${VERSION}"
          git push origin main
          git push origin "kaitu-${VERSION}"
          
          echo "Successfully updated Homebrew tap with version ${VERSION}"
          
      - name: Upload formula as artifact
        uses: actions/upload-artifact@v4
        with:
          name: homebrew-formula
          path: formula/kaitu.rb
          retention-days: 30
          
      - name: Create summary
        run: |
          VERSION="${{ steps.get_version.outputs.CLEAN_VERSION }}"
          SHA256="${{ steps.checksum.outputs.SHA256 }}"
          
          cat >> $GITHUB_STEP_SUMMARY << EOF
          # Homebrew Release Summary
          
          ## Version: ${VERSION}
          ## SHA256: \`${SHA256}\`
          
          ### Installation
          \`\`\`bash
          brew tap ${{ secrets.HOMEBREW_TAP_REPO }}
          brew install kaitu
          \`\`\`
          
          ### Manual Installation (if tap not configured)
          1. Download the generated formula from the artifacts
          2. Place it in your local Homebrew tap or use directly:
          \`\`\`bash
          brew install ./kaitu.rb
          \`\`\`
          EOF